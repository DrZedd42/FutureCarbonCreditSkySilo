{
  "contractName": "TokenPool",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_nodeId",
          "type": "uint256"
        },
        {
          "name": "_parentId",
          "type": "uint256"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIndexToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_toId",
          "type": "uint256"
        },
        {
          "name": "_level",
          "type": "uint256"
        }
      ],
      "name": "setLevel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "cApprove",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_nodeId",
          "type": "uint256"
        }
      ],
      "name": "removeToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_toId",
          "type": "uint256"
        }
      ],
      "name": "increaseLevel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_fromId",
          "type": "uint256"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "cDestroy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_toId",
          "type": "uint256"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "cIssue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "cTransfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenMetadata",
      "outputs": [
        {
          "name": "infoUrl",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "count",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "name": "ownerTokens",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cTotalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fromId",
          "type": "uint256"
        },
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_toId",
          "type": "uint256"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "cApproveFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIndexToPoolToken",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIndexToApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_toId",
          "type": "uint256"
        }
      ],
      "name": "getLevel",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "cBalanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "cTransferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "valueOf",
      "outputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowanceAmt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxLevel",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_nodeId",
          "type": "uint256"
        }
      ],
      "name": "getPath",
      "outputs": [
        {
          "name": "path",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowanceIds",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "cAllowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "nodeId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "parentId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "level",
          "type": "uint256"
        }
      ],
      "name": "AddToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "nodeId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "level",
          "type": "uint256"
        }
      ],
      "name": "RemoveToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "fromId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "toId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "toId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "AddValue",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "fromId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "RemoveValue",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "toId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "level",
          "type": "uint256"
        }
      ],
      "name": "SetLevel",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "toId",
          "type": "uint256"
        }
      ],
      "name": "IncreaseLevel",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "fromId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "toId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "CApproveFrom",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "CApprove",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "fromId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "toId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "allowance",
          "type": "uint256"
        }
      ],
      "name": "CTransferFrom",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "toId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "CIssue",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "fromId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "CDestroy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "metadata",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "kind",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "Birth",
      "type": "event"
    }
  ],
  "bytecode": "0x606060405234156200001057600080fd5b60405162003dcc38038062003dcc833981016040528080518201919060200180518201919050506200004162000362565b6200004b62000362565b6200005562000362565b84848181818133600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160009080519060200190620000b49291906200039c565b508060019080519060200190620000cd9291906200039c565b50505033600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506004600c8190555050506004600c8190555060c060405190810160405280600060ff16815260200160018152602001600a81526020016000815260200160008152602001600a8152509250600e805480600101828162000174919062000423565b9160005260206000209060060201600085909190915060008201518160000160006101000a81548160ff021916908360ff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015550505060c060405190810160405280600160ff168152602001600a815260200160648152602001600081526020016000815260200160148152509150600e80548060010182816200022f919062000423565b9160005260206000209060060201600084909190915060008201518160000160006101000a81548160ff021916908360ff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015550505060c060405190810160405280600260ff1681526020016103e8815260200160648152602001600081526020016000815260200160328152509050600e8054806001018281620002eb919062000423565b9160005260206000209060060201600083909190915060008201518160000160006101000a81548160ff021916908360ff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a082015181600501555050505050505050620004de565b60c060405190810160405280600060ff16815260200160008152602001600081526020016000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003df57805160ff191683800117855562000410565b8280016001018555821562000410579182015b828111156200040f578251825591602001919060010190620003f2565b5b5090506200041f919062000458565b5090565b815481835581811511620004535760060281600602836000526020600020918201910162000452919062000480565b5b505050565b6200047d91905b80821115620004795760008160009055506001016200045f565b5090565b90565b620004db91905b80821115620004d757600080820160006101000a81549060ff0219169055600182016000905560028201600090556003820160009055600482016000905560058201600090555060060162000487565b5090565b90565b6138de80620004ee6000396000f3006060604052600436106101d8576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a7146101dd57806306fdde0314610237578063095ea7b3146102c557806317b9ebec1461030757806318160ddd146103335780631d36e06c1461035c57806323b872dd146103bf578063296250051461042057806332c4ee831461046b57806336c5d724146104c557806339e6cdb1146104e85780634cabcfac1461052a578063545c3d55146105755780636352211e146105c057806366d80ba5146106235780636914db601461067d57806370a082311461071957806379ba5097146107665780638462151c1461077b5780638da5cb5b146108095780638f1fc77c1461085e57806395d89b411461088757806398dc5c95146109155780639ca0883114610981578063a8bd9c32146109b8578063a9059cbb14610a1b578063b121f2ac14610a5d578063b135707914610ab3578063bf62266514610b00578063cadf338f14610b79578063cbbc9f8914610bb0578063cc06c35914610c1c578063d4ee1d9014610c45578063dd62ed3e14610c9a578063e176507314610d06578063e527cc9d14610d7e578063f2fde38b14610dea578063f81fd7ea14610e23575b600080fd5b34156101e857600080fd5b61021d60048080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019091905050610e8f565b604051808215151515815260200191505060405180910390f35b341561024257600080fd5b61024a6111a0565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561028a57808201518184015260208101905061026f565b50505050905090810190601f1680156102b75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102d057600080fd5b610305600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611248565b005b341561031257600080fd5b610331600480803590602001909190803590602001909190505061130a565b005b341561033e57600080fd5b610346611448565b6040518082815260200191505060405180910390f35b341561036757600080fd5b61037d600480803590602001909190505061146a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103ca57600080fd5b61041e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061149d565b005b341561042b57600080fd5b610469600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001909190505061154e565b005b341561047657600080fd5b6104ab600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611659565b604051808215151515815260200191505060405180910390f35b34156104d057600080fd5b6104e660048080359060200190919050506118ee565b005b34156104f357600080fd5b610528600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506119a3565b005b341561053557600080fd5b610573600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050611ac8565b005b341561058057600080fd5b6105be600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050611bc1565b005b34156105cb57600080fd5b6105e16004808035906020019091905050611cba565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561062e57600080fd5b610663600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611d38565b604051808215151515815260200191505060405180910390f35b341561068857600080fd5b61069e6004808035906020019091905050611d9e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106de5780820151818401526020810190506106c3565b50505050905090810190601f16801561070b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561072457600080fd5b610750600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611e66565b6040518082815260200191505060405180910390f35b341561077157600080fd5b610779611eaf565b005b341561078657600080fd5b6107b2600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612050565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107f55780820151818401526020810190506107da565b505050509050019250505060405180910390f35b341561081457600080fd5b61081c612068565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561086957600080fd5b61087161208e565b6040518082815260200191505060405180910390f35b341561089257600080fd5b61089a6120e8565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108da5780820151818401526020810190506108bf565b50505050905090810190601f1680156109075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561092057600080fd5b610967600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050612190565b604051808215151515815260200191505060405180910390f35b341561098c57600080fd5b6109a2600480803590602001909190505061241c565b6040518082815260200191505060405180910390f35b34156109c357600080fd5b6109d96004808035906020019091905050612434565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610a2657600080fd5b610a5b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050612467565b005b3415610a6857600080fd5b610a9d600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050612502565b6040518082815260200191505060405180910390f35b3415610abe57600080fd5b610aea600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612542565b6040518082815260200191505060405180910390f35b3415610b0b57600080fd5b610b5f600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506125c6565b604051808215151515815260200191505060405180910390f35b3415610b8457600080fd5b610b9a6004808035906020019091905050612c3b565b6040518082815260200191505060405180910390f35b3415610bbb57600080fd5b610c06600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612c65565b6040518082815260200191505060405180910390f35b3415610c2757600080fd5b610c2f612c8a565b6040518082815260200191505060405180910390f35b3415610c5057600080fd5b610c58612c90565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610ca557600080fd5b610cf0600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612cb6565b6040518082815260200191505060405180910390f35b3415610d1157600080fd5b610d276004808035906020019091905050612cdb565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610d6a578082015181840152602081019050610d4f565b505050509050019250505060405180910390f35b3415610d8957600080fd5b610dd4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612d52565b6040518082815260200191505060405180910390f35b3415610df557600080fd5b610e21600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612d77565b005b3415610e2e57600080fd5b610e79600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612e71565b6040518082815260200191505060405180910390f35b600060405180807f737570706f727473496e74657266616365286279746573342900000000000000815250601901905060405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611199575060405180807f746f6b656e4d657461646174612875696e743235362c737472696e6729000000815250601d019050604051809103902060405180807f746f6b656e734f664f776e6572286164647265737329000000000000000000008152506016019050604051809103902060405180807f7472616e7366657246726f6d28616464726573732c616464726573732c75696e81526020017f74323536290000000000000000000000000000000000000000000000000000008152506025019050604051809103902060405180807f7472616e7366657228616464726573732c75696e7432353629000000000000008152506019019050604051809103902060405180807f617070726f766528616464726573732c75696e743235362900000000000000008152506018019050604051809103902060405180807f6f776e65724f662875696e7432353629000000000000000000000000000000008152506010019050604051809103902060405180807f62616c616e63654f6628616464726573732900000000000000000000000000008152506012019050604051809103902060405180807f746f74616c537570706c79282900000000000000000000000000000000000000815250600d019050604051809103902060405180807f73796d626f6c28290000000000000000000000000000000000000000000000008152506008019050604051809103902060405180807f6e616d6528290000000000000000000000000000000000000000000000000000815250600601905060405180910390201818181818181818187bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6111a861388a565b60008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561123e5780601f106112135761010080835404028352916020019161123e565b820191906000526020600020905b81548152906001019060200180831161122157829003601f168201915b5050505050905090565b6112523382612f6f565b151561125d57600080fd5b6112678183612fdb565b7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925338383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050565b6000821415801561131f575060038054905082105b151561132a57600080fd5b6000811415801561133f575060038054905081105b151561134a57600080fd5b6001600c540360038281548110151561135f57fe5b90600052602060002090600502016003015410151561137d57600080fd5b80600d60008481526020019081526020016000208190555060016003828154811015156113a657fe5b906000526020600020906005020160030154016003838154811015156113c857fe5b9060005260206000209060050201600301819055507f0900f87897aa374bb21fa36753905fa2944dd2301242246101a9047a0ed227a0828260038581548110151561140f57fe5b90600052602060002090600502016003015460405180848152602001838152602001828152602001935050505060405180910390a15050565b60008060038054905090506000811115611463576001810390505b8091505090565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156114d957600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561151457600080fd5b61151e3382613031565b151561152957600080fd5b6115338382612f6f565b151561153e57600080fd5b61154983838361309d565b505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115a757fe5b6115b18383612f6f565b15156115bc57600080fd5b806003838154811015156115cc57fe5b9060005260206000209060050201600301819055507f48ed1b5769aee6cf16cda3da1db2a0acf83c194c9d2a98ebeff4904567af58f6838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a1505050565b600080600080600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415151561169b57600080fd5b600085141515156116ab57600080fd5b3392506116b78361329f565b91506116c28661329f565b90508082141515156116d357600080fd5b600082141515156116e357600080fd5b600081141515156116f357600080fd5b80600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555084600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fe051949e9a44e2e9c21ee7d1c7b03ef0bf501aa3b7c4616a8543f229c0bede7a8686604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a16001935050505092915050565b6000808214158015611904575060038054905082105b151561190f57600080fd5b611918826132ef565b905060008114151561192957600080fd5b600d6000838152602001908152602001600020600090557f399c331be71add502e95a2402ba7370605a945c1c6c1dc01c5e30f7e896cfa568260038481548110151561197157fe5b906000526020600020906005020160030154604051808381526020018281526020019250505060405180910390a15050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119fc57fe5b611a068282612f6f565b1515611a1157600080fd5b6001600382815481101515611a2257fe5b90600052602060002090600502016003015401600382815481101515611a4457fe5b9060005260206000209060050201600301819055507fb6ffa2bc58069f160ac94855c396bc8a7c591ae4b9e69d78cc004ad2e4d70d858282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515611b0557600080fd5b60008214151515611b1557600080fd5b8290506000811415611b2d57611b2a8461329f565b90505b60008114151515611b3d57600080fd5b611b48848284613367565b7f8ee078ba6dd38678f9ffdc8f1df2d512559df0cae2db32c829459127e1003197848484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150505050565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515611bfe57600080fd5b60008214151515611c0e57600080fd5b8290506000811415611c2657611c238461329f565b90505b60008114151515611c3657600080fd5b611c4184828461347a565b7ff3d0e22890d929d2a1cd5ca9e5f6498c4271ce2f0223ab4092297c2d11c9ef75848484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150505050565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611d2f57600080fd5b80915050919050565b600080600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515611d7757600080fd5b60008314151515611d8757600080fd5b339050611d958185856125c6565b91505092915050565b611da661388a565b600382815481101515611db557fe5b90600052602060002090600502016001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e5a5780601f10611e2f57610100808354040283529160200191611e5a565b820191906000526020600020905b815481529060010190602001808311611e3d57829003601f168201915b50505050509050919050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611f0b57600080fd5b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a60405160405180910390a3600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61205861389e565b6120618261355e565b9050919050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600080600092506003805490509150600190505b818110156120df576003818154811015156120bc57fe5b9060005260206000209060050201600001548301925080806001019150506120a5565b82935050505090565b6120f061388a565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121865780601f1061215b57610100808354040283529160200191612186565b820191906000526020600020905b81548152906001019060200180831161216957829003601f168201915b5050505050905090565b600080600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141515156121cf57600080fd5b8386141515156121de57600080fd5b600086141515156121ee57600080fd5b600084141515156121fe57600080fd5b6000831415151561220e57600080fd5b33905083600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555085600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fef4beaa380feab20776f162f92bbf15b04c59f8fd4e8ab2508b8d29fed7dfd6186868686604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a16001915050949350505050565b600d6020528060005260406000206000915090505481565b60066020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156124a357600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156124de57600080fd5b6124e83382612f6f565b15156124f357600080fd5b6124fe33838361309d565b5050565b600061250e8383612f6f565b151561251957600080fd5b60038281548110151561252857fe5b906000526020600020906005020160030154905092915050565b600061254c61389e565b600080600061255a8661355e565b93506000925083519150600090505b818110156125ba576003848281518110151561258157fe5b9060200190602002015181548110151561259757fe5b906000526020600020906005020160000154830192508080600101915050612569565b82945050505050919050565b60008060008060008073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415151561260957600080fd5b6000861415151561261957600080fd5b879350600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549250600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508183141515156127a857600080fd5b600083141515156127b857600080fd5b600082141515156127c857600080fd5b600081141515156127d857600080fd5b8581101515156127e757600080fd5b6127f4848389868a6136ce565b85600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415612af957600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090555b7fa085ba1c72fda1f13ecb6e0347284ac7d016a73b7a47c0ba151368bbe5ce2db9888389868a600960008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828152602001965050505050505060405180910390a160019450505050509392505050565b6000600382815481101515612c4c57fe5b9060005260206000209060050201600001549050919050565b6009602052816000526040600020602052806000526040600020600091509150505481565b600c5481565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6007602052816000526040600020602052806000526040600020600091509150505481565b612ce361389e565b600080600d6000858152602001908152602001600020549150600090505b600c54811015612d4b57818382815181101515612d1a57fe5b9060200190602002018181525050600d60008381526020019081526020016000205491508080600101915050612d01565b5050919050565b6008602052816000526040600020602052806000526040600020600091509150505481565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612dd057fe5b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612e2d57600080fd5b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612eae57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515612eea57600080fd5b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b806006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008273ffffffffffffffffffffffffffffffffffffffff166006600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415156131fb57600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001900391905055506006600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b60006132a961389e565b60006132b48461355e565b91508151905060008114156132cc57600092506132e8565b8160008151811015156132db57fe5b9060200190602002015192505b5050919050565b6000806000808414158015613308575060038054905084105b151561331357600080fd5b61331b611448565b915060009250600190505b81811115156133605783600d60008381526020019081526020016000205414156133535782806001019350505b8080600101915050613326565b5050919050565b6133718383612f6f565b151561337c57600080fd5b6000811415151561338c57600080fd5b8060038381548110151561339c57fe5b906000526020600020906005020160000154101515156133bb57600080fd5b806003838154811015156133cb57fe5b906000526020600020906005020160000154036003838154811015156133ed57fe5b9060005260206000209060050201600001819055507f45dacd427fd388bf162986dbc958cdcf160c31b40efe076907cff377b9857c79838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a1505050565b6134848383612f6f565b151561348f57600080fd5b6000811415151561349f57600080fd5b806003838154811015156134af57fe5b906000526020600020906005020160000154016003838154811015156134d157fe5b9060005260206000209060050201600001819055507f20f4934a3b4928cca0e51f3f1eaac12dee9af151a8a8ba5a424a89d93f6bf53d838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a1505050565b61356661389e565b600061357061389e565b60008060008073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16141515156135b057600080fd5b6135b987611e66565b945060008514156135eb5760006040518059106135d35750595b908082528060200260200182016040525095506136c4565b846040518059106135f95750595b90808252806020026020018201604052509350613614611448565b925060009150600190505b82811115156136c0578673ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156136b3578084838060010194508151811015156136a457fe5b90602001906020020181815250505b808060010191505061361f565b8395505b5050505050919050565b6136d88585612f6f565b15156136e357600080fd5b6136ed8383612f6f565b15156136f857600080fd5b6000811415151561370857600080fd5b81841415151561371757600080fd5b8060038581548110151561372757fe5b9060005260206000209060050201600001541015151561374657600080fd5b8060038581548110151561375657fe5b9060005260206000209060050201600001540360038581548110151561377857fe5b9060005260206000209060050201600001819055508060038381548110151561379d57fe5b906000526020600020906005020160000154016003838154811015156137bf57fe5b9060005260206000209060050201600001819055507f6d401b913d27047ecd2042f0331e2354d30e664920b31480dc71955edb996c388585858585604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019550505050505060405180910390a15050505050565b602060405190810160405280600081525090565b6020604051908101604052806000815250905600a165627a7a72305820ae3273d5dcbc8b9737548b514c2d42e8ea232fee10027ecb81208aeaa7af8a360029",
  "deployedBytecode": "0x6060604052600436106101d8576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a7146101dd57806306fdde0314610237578063095ea7b3146102c557806317b9ebec1461030757806318160ddd146103335780631d36e06c1461035c57806323b872dd146103bf578063296250051461042057806332c4ee831461046b57806336c5d724146104c557806339e6cdb1146104e85780634cabcfac1461052a578063545c3d55146105755780636352211e146105c057806366d80ba5146106235780636914db601461067d57806370a082311461071957806379ba5097146107665780638462151c1461077b5780638da5cb5b146108095780638f1fc77c1461085e57806395d89b411461088757806398dc5c95146109155780639ca0883114610981578063a8bd9c32146109b8578063a9059cbb14610a1b578063b121f2ac14610a5d578063b135707914610ab3578063bf62266514610b00578063cadf338f14610b79578063cbbc9f8914610bb0578063cc06c35914610c1c578063d4ee1d9014610c45578063dd62ed3e14610c9a578063e176507314610d06578063e527cc9d14610d7e578063f2fde38b14610dea578063f81fd7ea14610e23575b600080fd5b34156101e857600080fd5b61021d60048080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019091905050610e8f565b604051808215151515815260200191505060405180910390f35b341561024257600080fd5b61024a6111a0565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561028a57808201518184015260208101905061026f565b50505050905090810190601f1680156102b75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102d057600080fd5b610305600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611248565b005b341561031257600080fd5b610331600480803590602001909190803590602001909190505061130a565b005b341561033e57600080fd5b610346611448565b6040518082815260200191505060405180910390f35b341561036757600080fd5b61037d600480803590602001909190505061146a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103ca57600080fd5b61041e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061149d565b005b341561042b57600080fd5b610469600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001909190505061154e565b005b341561047657600080fd5b6104ab600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611659565b604051808215151515815260200191505060405180910390f35b34156104d057600080fd5b6104e660048080359060200190919050506118ee565b005b34156104f357600080fd5b610528600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506119a3565b005b341561053557600080fd5b610573600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050611ac8565b005b341561058057600080fd5b6105be600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050611bc1565b005b34156105cb57600080fd5b6105e16004808035906020019091905050611cba565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561062e57600080fd5b610663600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611d38565b604051808215151515815260200191505060405180910390f35b341561068857600080fd5b61069e6004808035906020019091905050611d9e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106de5780820151818401526020810190506106c3565b50505050905090810190601f16801561070b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561072457600080fd5b610750600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611e66565b6040518082815260200191505060405180910390f35b341561077157600080fd5b610779611eaf565b005b341561078657600080fd5b6107b2600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612050565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107f55780820151818401526020810190506107da565b505050509050019250505060405180910390f35b341561081457600080fd5b61081c612068565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561086957600080fd5b61087161208e565b6040518082815260200191505060405180910390f35b341561089257600080fd5b61089a6120e8565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108da5780820151818401526020810190506108bf565b50505050905090810190601f1680156109075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561092057600080fd5b610967600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050612190565b604051808215151515815260200191505060405180910390f35b341561098c57600080fd5b6109a2600480803590602001909190505061241c565b6040518082815260200191505060405180910390f35b34156109c357600080fd5b6109d96004808035906020019091905050612434565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610a2657600080fd5b610a5b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050612467565b005b3415610a6857600080fd5b610a9d600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050612502565b6040518082815260200191505060405180910390f35b3415610abe57600080fd5b610aea600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612542565b6040518082815260200191505060405180910390f35b3415610b0b57600080fd5b610b5f600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506125c6565b604051808215151515815260200191505060405180910390f35b3415610b8457600080fd5b610b9a6004808035906020019091905050612c3b565b6040518082815260200191505060405180910390f35b3415610bbb57600080fd5b610c06600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612c65565b6040518082815260200191505060405180910390f35b3415610c2757600080fd5b610c2f612c8a565b6040518082815260200191505060405180910390f35b3415610c5057600080fd5b610c58612c90565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610ca557600080fd5b610cf0600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612cb6565b6040518082815260200191505060405180910390f35b3415610d1157600080fd5b610d276004808035906020019091905050612cdb565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610d6a578082015181840152602081019050610d4f565b505050509050019250505060405180910390f35b3415610d8957600080fd5b610dd4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612d52565b6040518082815260200191505060405180910390f35b3415610df557600080fd5b610e21600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612d77565b005b3415610e2e57600080fd5b610e79600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612e71565b6040518082815260200191505060405180910390f35b600060405180807f737570706f727473496e74657266616365286279746573342900000000000000815250601901905060405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611199575060405180807f746f6b656e4d657461646174612875696e743235362c737472696e6729000000815250601d019050604051809103902060405180807f746f6b656e734f664f776e6572286164647265737329000000000000000000008152506016019050604051809103902060405180807f7472616e7366657246726f6d28616464726573732c616464726573732c75696e81526020017f74323536290000000000000000000000000000000000000000000000000000008152506025019050604051809103902060405180807f7472616e7366657228616464726573732c75696e7432353629000000000000008152506019019050604051809103902060405180807f617070726f766528616464726573732c75696e743235362900000000000000008152506018019050604051809103902060405180807f6f776e65724f662875696e7432353629000000000000000000000000000000008152506010019050604051809103902060405180807f62616c616e63654f6628616464726573732900000000000000000000000000008152506012019050604051809103902060405180807f746f74616c537570706c79282900000000000000000000000000000000000000815250600d019050604051809103902060405180807f73796d626f6c28290000000000000000000000000000000000000000000000008152506008019050604051809103902060405180807f6e616d6528290000000000000000000000000000000000000000000000000000815250600601905060405180910390201818181818181818187bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6111a861388a565b60008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561123e5780601f106112135761010080835404028352916020019161123e565b820191906000526020600020905b81548152906001019060200180831161122157829003601f168201915b5050505050905090565b6112523382612f6f565b151561125d57600080fd5b6112678183612fdb565b7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925338383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050565b6000821415801561131f575060038054905082105b151561132a57600080fd5b6000811415801561133f575060038054905081105b151561134a57600080fd5b6001600c540360038281548110151561135f57fe5b90600052602060002090600502016003015410151561137d57600080fd5b80600d60008481526020019081526020016000208190555060016003828154811015156113a657fe5b906000526020600020906005020160030154016003838154811015156113c857fe5b9060005260206000209060050201600301819055507f0900f87897aa374bb21fa36753905fa2944dd2301242246101a9047a0ed227a0828260038581548110151561140f57fe5b90600052602060002090600502016003015460405180848152602001838152602001828152602001935050505060405180910390a15050565b60008060038054905090506000811115611463576001810390505b8091505090565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156114d957600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561151457600080fd5b61151e3382613031565b151561152957600080fd5b6115338382612f6f565b151561153e57600080fd5b61154983838361309d565b505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115a757fe5b6115b18383612f6f565b15156115bc57600080fd5b806003838154811015156115cc57fe5b9060005260206000209060050201600301819055507f48ed1b5769aee6cf16cda3da1db2a0acf83c194c9d2a98ebeff4904567af58f6838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a1505050565b600080600080600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415151561169b57600080fd5b600085141515156116ab57600080fd5b3392506116b78361329f565b91506116c28661329f565b90508082141515156116d357600080fd5b600082141515156116e357600080fd5b600081141515156116f357600080fd5b80600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555084600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fe051949e9a44e2e9c21ee7d1c7b03ef0bf501aa3b7c4616a8543f229c0bede7a8686604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a16001935050505092915050565b6000808214158015611904575060038054905082105b151561190f57600080fd5b611918826132ef565b905060008114151561192957600080fd5b600d6000838152602001908152602001600020600090557f399c331be71add502e95a2402ba7370605a945c1c6c1dc01c5e30f7e896cfa568260038481548110151561197157fe5b906000526020600020906005020160030154604051808381526020018281526020019250505060405180910390a15050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119fc57fe5b611a068282612f6f565b1515611a1157600080fd5b6001600382815481101515611a2257fe5b90600052602060002090600502016003015401600382815481101515611a4457fe5b9060005260206000209060050201600301819055507fb6ffa2bc58069f160ac94855c396bc8a7c591ae4b9e69d78cc004ad2e4d70d858282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515611b0557600080fd5b60008214151515611b1557600080fd5b8290506000811415611b2d57611b2a8461329f565b90505b60008114151515611b3d57600080fd5b611b48848284613367565b7f8ee078ba6dd38678f9ffdc8f1df2d512559df0cae2db32c829459127e1003197848484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150505050565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515611bfe57600080fd5b60008214151515611c0e57600080fd5b8290506000811415611c2657611c238461329f565b90505b60008114151515611c3657600080fd5b611c4184828461347a565b7ff3d0e22890d929d2a1cd5ca9e5f6498c4271ce2f0223ab4092297c2d11c9ef75848484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150505050565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611d2f57600080fd5b80915050919050565b600080600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515611d7757600080fd5b60008314151515611d8757600080fd5b339050611d958185856125c6565b91505092915050565b611da661388a565b600382815481101515611db557fe5b90600052602060002090600502016001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e5a5780601f10611e2f57610100808354040283529160200191611e5a565b820191906000526020600020905b815481529060010190602001808311611e3d57829003601f168201915b50505050509050919050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611f0b57600080fd5b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a60405160405180910390a3600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61205861389e565b6120618261355e565b9050919050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600080600092506003805490509150600190505b818110156120df576003818154811015156120bc57fe5b9060005260206000209060050201600001548301925080806001019150506120a5565b82935050505090565b6120f061388a565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121865780601f1061215b57610100808354040283529160200191612186565b820191906000526020600020905b81548152906001019060200180831161216957829003601f168201915b5050505050905090565b600080600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141515156121cf57600080fd5b8386141515156121de57600080fd5b600086141515156121ee57600080fd5b600084141515156121fe57600080fd5b6000831415151561220e57600080fd5b33905083600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555085600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fef4beaa380feab20776f162f92bbf15b04c59f8fd4e8ab2508b8d29fed7dfd6186868686604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a16001915050949350505050565b600d6020528060005260406000206000915090505481565b60066020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156124a357600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156124de57600080fd5b6124e83382612f6f565b15156124f357600080fd5b6124fe33838361309d565b5050565b600061250e8383612f6f565b151561251957600080fd5b60038281548110151561252857fe5b906000526020600020906005020160030154905092915050565b600061254c61389e565b600080600061255a8661355e565b93506000925083519150600090505b818110156125ba576003848281518110151561258157fe5b9060200190602002015181548110151561259757fe5b906000526020600020906005020160000154830192508080600101915050612569565b82945050505050919050565b60008060008060008073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415151561260957600080fd5b6000861415151561261957600080fd5b879350600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549250600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508183141515156127a857600080fd5b600083141515156127b857600080fd5b600082141515156127c857600080fd5b600081141515156127d857600080fd5b8581101515156127e757600080fd5b6127f4848389868a6136ce565b85600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415612af957600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090555b7fa085ba1c72fda1f13ecb6e0347284ac7d016a73b7a47c0ba151368bbe5ce2db9888389868a600960008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828152602001965050505050505060405180910390a160019450505050509392505050565b6000600382815481101515612c4c57fe5b9060005260206000209060050201600001549050919050565b6009602052816000526040600020602052806000526040600020600091509150505481565b600c5481565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6007602052816000526040600020602052806000526040600020600091509150505481565b612ce361389e565b600080600d6000858152602001908152602001600020549150600090505b600c54811015612d4b57818382815181101515612d1a57fe5b9060200190602002018181525050600d60008381526020019081526020016000205491508080600101915050612d01565b5050919050565b6008602052816000526040600020602052806000526040600020600091509150505481565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612dd057fe5b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612e2d57600080fd5b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612eae57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515612eea57600080fd5b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b806006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008273ffffffffffffffffffffffffffffffffffffffff166006600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415156131fb57600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001900391905055506006600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b60006132a961389e565b60006132b48461355e565b91508151905060008114156132cc57600092506132e8565b8160008151811015156132db57fe5b9060200190602002015192505b5050919050565b6000806000808414158015613308575060038054905084105b151561331357600080fd5b61331b611448565b915060009250600190505b81811115156133605783600d60008381526020019081526020016000205414156133535782806001019350505b8080600101915050613326565b5050919050565b6133718383612f6f565b151561337c57600080fd5b6000811415151561338c57600080fd5b8060038381548110151561339c57fe5b906000526020600020906005020160000154101515156133bb57600080fd5b806003838154811015156133cb57fe5b906000526020600020906005020160000154036003838154811015156133ed57fe5b9060005260206000209060050201600001819055507f45dacd427fd388bf162986dbc958cdcf160c31b40efe076907cff377b9857c79838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a1505050565b6134848383612f6f565b151561348f57600080fd5b6000811415151561349f57600080fd5b806003838154811015156134af57fe5b906000526020600020906005020160000154016003838154811015156134d157fe5b9060005260206000209060050201600001819055507f20f4934a3b4928cca0e51f3f1eaac12dee9af151a8a8ba5a424a89d93f6bf53d838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a1505050565b61356661389e565b600061357061389e565b60008060008073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16141515156135b057600080fd5b6135b987611e66565b945060008514156135eb5760006040518059106135d35750595b908082528060200260200182016040525095506136c4565b846040518059106135f95750595b90808252806020026020018201604052509350613614611448565b925060009150600190505b82811115156136c0578673ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156136b3578084838060010194508151811015156136a457fe5b90602001906020020181815250505b808060010191505061361f565b8395505b5050505050919050565b6136d88585612f6f565b15156136e357600080fd5b6136ed8383612f6f565b15156136f857600080fd5b6000811415151561370857600080fd5b81841415151561371757600080fd5b8060038581548110151561372757fe5b9060005260206000209060050201600001541015151561374657600080fd5b8060038581548110151561375657fe5b9060005260206000209060050201600001540360038581548110151561377857fe5b9060005260206000209060050201600001819055508060038381548110151561379d57fe5b906000526020600020906005020160000154016003838154811015156137bf57fe5b9060005260206000209060050201600001819055507f6d401b913d27047ecd2042f0331e2354d30e664920b31480dc71955edb996c388585858585604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019550505050505060405180910390a15050505050565b602060405190810160405280600081525090565b6020604051908101604052806000815250905600a165627a7a72305820ae3273d5dcbc8b9737548b514c2d42e8ea232fee10027ecb81208aeaa7af8a360029",
  "sourceMap": "1643:1907:5:-;;;2514:1034;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2669:21;;:::i;:::-;2975:16;;:::i;:::-;3276:19;;:::i;:::-;2578:5;2585:7;4171:5:4;4178:7;7529:5:2;7536:7;11759:10:1;11751:5;;:18;;;;;;;;;;;;;;;;;;11779:2;11771:5;:10;;;;;;;;;;;;:::i;:::-;;11793:2;11783:7;:12;;;;;;;;;;;;:::i;:::-;;11696:106;;372:10:3;364:5;;:18;;;;;;;;;;;;;;;;;;7466:88:2;;4207:1:4;4196:8;:12;;;;4100:111;;2623:1:5;2612:8;:12;;;;2693:210;;;;;;;;;2725:1;2693:210;;;;;;2760:1;2693:210;;;;2795:2;2693:210;;;;2828:1;2693:210;;;;2858:1;2693:210;;;;2889:2;2693:210;;;2669:234;;2913:5;:21;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;2924:9;2913:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2994:212;;;;;;;;;3026:1;2994:212;;;;;;3061:2;2994:212;;;;3097:3;2994:212;;;;3131:1;2994:212;;;;3161:1;2994:212;;;;3192:2;2994:212;;;2975:231;;3216:5;:16;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;3227:4;3216:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3298:214;;;;;;;;;3330:1;3298:214;;;;;;3365:4;3298:214;;;;3403:3;3298:214;;;;3437:1;3298:214;;;;3467:1;3298:214;;;;3498:2;3298:214;;;3276:236;;3522:5;:19;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;3533:7;3522:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2514:1034;;;;;1643:1907;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1643:1907:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8298:193:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7859:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9612:189:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2026:429:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10469:184:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2836:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10065:295;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6417:197:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4598:620:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2460:308:4;;;;;;;;;;;;;;;;;;;;;;;;;;6783:198:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8166:386:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7639:363;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10820:191:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7237:247:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11447:129:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8658:122:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:177:3;;;;;;;;;;;;;;11168:130:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;155:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3065:268:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8022:78:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3805:585:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1958:57:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3089:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9189:233;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7173:153:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3544:350;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5963:1018:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8916:115:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3026:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1885:23:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;181::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3228:66:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2773:308:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;2863:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;742:137:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;5440:219:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8298:193:1;8369:4;1479:38;;;;;;;;;;;;;;;;;;;8394:41;;;:12;:41;;;;8393:90;;;;2080:42;;;;;;;;;;;;;;;;;;;2026:35;;;;;;;;;;;;;;;;;;;1957:50;;;;;;;;;;;;;;;;;;;;;;;;1900:38;;;;;;;;;;;;;;;;;;;1844:37;;;;;;;;;;;;;;;;;;;1796:29;;;;;;;;;;;;;;;;;;;1746:31;;;;;;;;;;;;;;;;;;;1701:26;;;;;;;;;;;;;;;;;;;1661:21;;;;;;;;;;;;;;;;;;;1623:19;;;;;;;;;;;;;;;;;;;1616:67;:112;:162;:210;:266;:323;:392;:446;:507;8441:41;;;:12;:41;;;;8393:90;8385:99;;8298:193;;;:::o;7859:74::-;7896:6;;:::i;:::-;7921:5;7914:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7859:74;:::o;9612:189::-;9687:27;9693:10;9705:8;9687:5;:27::i;:::-;9679:36;;;;;;;;9726:23;9735:8;9745:3;9726:8;:23::i;:::-;9759:35;9768:10;9780:3;9785:8;9759:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9612:189;;:::o;2026:429:4:-;2124:1;2105:7;:21;;:46;;;;;2140:4;:11;;;;2130:7;:21;2105:46;2097:55;;;;;;;;2191:1;2170:9;:23;;:50;;;;;2209:4;:11;;;;2197:9;:23;2170:50;2162:59;;;;;;;;2275:1;2264:8;;:12;2239:4;2244:9;2239:15;;;;;;;;;;;;;;;;;;;;:21;;;:38;2231:47;;;;;;;;2322:9;2289:21;:30;2311:7;2289:30;;;;;;;;;;;:42;;;;2387:1;2363:4;2368:9;2363:15;;;;;;;;;;;;;;;;;;;;:21;;;:25;2341:4;2346:7;2341:13;;;;;;;;;;;;;;;;;;;;:19;;:47;;;;2399:49;2408:7;2417:9;2428:4;2433:7;2428:13;;;;;;;;;;;;;;;;;;;;:19;;;2399:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2026:429;;:::o;10469:184:1:-;10513:4;10529:11;10543:4;:11;;;;10529:25;;10577:1;10568:6;:10;10564:60;;;10612:1;10603:6;:10;10594:19;;10564:60;10640:6;10633:13;;10469:184;;:::o;2836:53::-;;;;;;;;;;;;;;;;;;;;;;:::o;10065:295::-;10175:1;10160:17;;:3;:17;;;;10152:26;;;;;;;;10211:4;10196:20;;:3;:20;;;;10188:29;;;;;;;;10235:34;10248:10;10260:8;10235:12;:34::i;:::-;10227:43;;;;;;;;10288:22;10294:5;10301:8;10288:5;:22::i;:::-;10280:31;;;;;;;;10322;10332:5;10339:3;10344:8;10322:9;:31::i;:::-;10065:295;;;:::o;6417:197:2:-;487:5:3;;;;;;;;;;;473:19;;:10;:19;;;466:27;;;;;;6514:17:2;6520:3;6525:5;6514;:17::i;:::-;6506:26;;;;;;;;6562:6;6542:4;6547:5;6542:11;;;;;;;;;;;;;;;;;;;;:17;;:26;;;;6579:28;6588:3;6593:5;6600:6;6579:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6417:197;;;:::o;4598:620:0:-;4666:12;4770:15;4808;4854:13;4718:1;4698:22;;:8;:22;;;;4690:31;;;;;;;;4757:1;4739:6;:20;;4731:29;;;;;;;;4788:10;4770:28;;4826:18;4836:7;4826:9;:18::i;:::-;4808:36;;4870:19;4880:8;4870:9;:19::i;:::-;4854:35;;4918:5;4907:7;:16;;4899:25;;;;;;;;4961:1;4942:7;:21;;4934:30;;;;;;;;4999:1;4982:5;:19;;4974:28;;;;;;;;5047:5;5013:12;:21;5026:7;5013:21;;;;;;;;;;;;;;;:31;5035:8;5013:31;;;;;;;;;;;;;;;:39;;;;5095:7;5062:12;:21;5075:7;5062:21;;;;;;;;;;;;;;;:30;5084:7;5062:30;;;;;;;;;;;;;;;:40;;;;5146:6;5112:12;:21;5125:7;5112:21;;;;;;;;;;;;;;;:31;5134:8;5112:31;;;;;;;;;;;;;;;:40;;;;5163:26;5172:8;5182:6;5163:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;5207:4;5200:11;;4598:620;;;;;;;:::o;2460:308:4:-;2580:16;2542:1;2523:7;:21;;:46;;;;;2558:4;:11;;;;2548:7;:21;2523:46;2515:55;;;;;;;;2599:21;2612:7;2599:12;:21::i;:::-;2580:40;;2658:1;2638:8;:22;2630:31;;;;;;;;2679:21;:30;2701:7;2679:30;;;;;;;;;;;2672:37;;;2720:41;2732:7;2741:4;2746:7;2741:13;;;;;;;;;;;;;;;;;;;;:19;;;2720:41;;;;;;;;;;;;;;;;;;;;;;;;2460:308;;:::o;6783:198:2:-;487:5:3;;;;;;;;;;;473:19;;:10;:19;;;466:27;;;;;;6869:17:2;6875:3;6880:5;6869;:17::i;:::-;6861:26;;;;;;;;6937:1;6917:4;6922:5;6917:11;;;;;;;;;;;;;;;;;;;;:17;;;:21;6897:4;6902:5;6897:11;;;;;;;;;;;;;;;;;;;;:17;;:41;;;;6949:25;6963:3;6968:5;6949:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;6783:198;;:::o;8166:386:0:-;8328:10;8275:1;8258:19;;:5;:19;;;;8250:28;;;;;;;;8315:1;8296:7;:21;;8288:30;;;;;;;;8341:7;8328:20;;8376:1;8362:2;:16;8358:68;;;8399:16;8409:5;8399:9;:16::i;:::-;8394:21;;8358:68;8457:1;8443:2;:16;;8435:25;;;;;;;;8470:31;8482:5;8489:2;8493:7;8470:11;:31::i;:::-;8512:33;8521:5;8528:7;8537;8512:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8166:386;;;;:::o;7639:363::-;7793:10;7740:1;7725:17;;:3;:17;;;;7717:26;;;;;;;;7780:1;7761:7;:21;;7753:30;;;;;;;;7806:5;7793:18;;7839:1;7825:2;:16;7821:66;;;7862:14;7872:3;7862:9;:14::i;:::-;7857:19;;7821:66;7918:1;7904:2;:16;;7896:25;;;;;;;;7931:26;7940:3;7945:2;7949:7;7931:8;:26::i;:::-;7968:27;7975:3;7980:5;7987:7;7968:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7639:363;;;;:::o;10820:191:1:-;10878:7;10897:14;10914:17;:27;10932:8;10914:27;;;;;;;;;;;;;;;;;;;;;10897:44;;10978:1;10960:20;;:6;:20;;;;10952:29;;;;;;;;10998:6;10991:13;;10820:191;;;;:::o;7237:247:0:-;7301:12;7400:13;7348:1;7333:17;;:3;:17;;;;7325:26;;;;;;;;7387:1;7369:6;:20;;7361:29;;;;;;;;7416:10;7400:26;;7444:33;7458:5;7465:3;7470:6;7444:13;:33::i;:::-;7437:40;;7237:247;;;;;:::o;11447:129:1:-;11513:14;;:::i;:::-;11546:4;11551:8;11546:14;;;;;;;;;;;;;;;;;;;;:23;;11539:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11447:129;;;:::o;8658:122::-;8714:13;8746:19;:27;8766:6;8746:27;;;;;;;;;;;;;;;;8739:34;;8658:122;;;:::o;965:177:3:-;1031:8;;;;;;;;;;;1017:22;;:10;:22;;;1009:31;;;;;;;;1069:8;;;;;;;;;;;1050:28;;1062:5;;;;;;;;;;;1050:28;;;;;;;;;;;;1096:8;;;;;;;;;;;1088:5;;:16;;;;;;;;;;;;;;;;;;1133:1;1114:8;;:21;;;;;;;;;;;;;;;;;;965:177::o;11168:130:1:-;11229:21;;:::i;:::-;11269:22;11284:6;11269:14;:22::i;:::-;11262:29;;11168:130;;;:::o;155:20:3:-;;;;;;;;;;;;;:::o;3065:268:2:-;3110:7;3129:15;3167:13;3210:10;3155:1;3129:28;;3183:4;:11;;;;3167:27;;3223:1;3210:14;;3205:98;3231:5;3226:2;:10;3205:98;;;3278:4;3283:2;3278:8;;;;;;;;;;;;;;;;;;;;:14;;;3268:7;:24;3258:34;;3238:4;;;;;;;3205:98;;;3319:7;3312:14;;3065:268;;;;:::o;8022:78:1:-;8061:6;;:::i;:::-;8086:7;8079:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8022:78;:::o;3805:585:0:-;3909:12;4126:15;3961:1;3941:22;;:8;:22;;;;3933:31;;;;;;;;3993:5;3982:7;:16;;3974:25;;;;;;;;4036:1;4017:7;:21;;4009:30;;;;;;;;4074:1;4057:5;:19;;4049:28;;;;;;;;4113:1;4095:6;:20;;4087:29;;;;;;;;4144:10;4126:28;;4199:5;4165:12;:21;4178:7;4165:21;;;;;;;;;;;;;;;:31;4187:8;4165:31;;;;;;;;;;;;;;;:39;;;;4247:7;4214:12;:21;4227:7;4214:21;;;;;;;;;;;;;;;:30;4236:7;4214:30;;;;;;;;;;;;;;;:40;;;;4298:6;4264:12;:21;4277:7;4264:21;;;;;;;;;;;;;;;:31;4286:8;4264:31;;;;;;;;;;;;;;;:40;;;;4315:46;4328:7;4337:8;4347:5;4354:6;4315:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4379:4;4372:11;;3805:585;;;;;;;:::o;1958:57:4:-;;;;;;;;;;;;;;;;;:::o;3089:56:1:-;;;;;;;;;;;;;;;;;;;;;;:::o;9189:233::-;9280:1;9265:17;;:3;:17;;;;9257:26;;;;;;;;9316:4;9301:20;;:3;:20;;;;9293:29;;;;;;;;9341:27;9347:10;9359:8;9341:5;:27::i;:::-;9333:36;;;;;;;;9379;9389:10;9401:3;9406:8;9379:9;:36::i;:::-;9189:233;;:::o;7173:153:2:-;7240:7;7267:17;7273:3;7278:5;7267;:17::i;:::-;7259:26;;;;;;;;7302:4;7307:5;7302:11;;;;;;;;;;;;;;;;;;;;:17;;;7295:24;;7173:153;;;;:::o;3544:350::-;3601:7;3620:25;;:::i;:::-;3680:15;3718:13;3765:9;3648:22;3663:6;3648:14;:22::i;:::-;3620:50;;3706:1;3680:28;;3734:8;:15;3718:31;;3777:1;3765:13;;3760:104;3784:5;3780:1;:9;3760:104;;;3830:4;3835:8;3844:1;3835:11;;;;;;;;;;;;;;;;;;3830:17;;;;;;;;;;;;;;;;;;;;:23;;;3820:7;:33;3810:43;;3791:3;;;;;;;3760:104;;;3880:7;3873:14;;3544:350;;;;;;;:::o;5963:1018:0:-;6046:12;6145:15;6179:13;6231:15;6289;6093:1;6078:17;;:3;:17;;;;6070:26;;;;;;;;6132:1;6114:6;:20;;6106:29;;;;;;;;6163:5;6145:23;;6195:12;:21;6208:7;6195:21;;;;;;;;;;;;;;;:26;6217:3;6195:26;;;;;;;;;;;;;;;;6179:42;;6249:12;:21;6262:7;6249:21;;;;;;;;;;;;;;;:30;6271:7;6249:30;;;;;;;;;;;;;;;;6231:48;;6307:12;:21;6320:7;6307:21;;;;;;;;;;;;;;;:26;6329:3;6307:26;;;;;;;;;;;;;;;;6289:44;;6360:7;6351:5;:16;;6343:25;;;;;;;;6403:1;6386:5;:19;;6378:28;;;;;;;;6443:1;6424:7;:21;;6416:30;;;;;;;;6483:1;6464:7;:21;;6456:30;;;;;;;;6515:6;6504:7;:17;;6496:26;;;;;;;;6533:46;6542:7;6551;6560:3;6565:5;6572:6;6533:8;:46::i;:::-;6647:6;6618:12;:21;6631:7;6618:21;;;;;;;;;;;;;;;:26;6640:3;6618:26;;;;;;;;;;;;;;;;:35;6589:12;:21;6602:7;6589:21;;;;;;;;;;;;;;;:26;6611:3;6589:26;;;;;;;;;;;;;;;:64;;;;6705:1;6667:12;:21;6680:7;6667:21;;;;;;;;;;;;;;;:26;6689:3;6667:26;;;;;;;;;;;;;;;;:40;6663:202;;;6730:12;:21;6743:7;6730:21;;;;;;;;;;;;;;;:26;6752:3;6730:26;;;;;;;;;;;;;;;6723:33;;;6777:12;:21;6790:7;6777:21;;;;;;;;;;;;;;;:30;6799:7;6777:30;;;;;;;;;;;;;;;6770:37;;;6828:12;:21;6841:7;6828:21;;;;;;;;;;;;;;;:26;6850:3;6828:26;;;;;;;;;;;;;;;6821:33;;;6663:202;6875:77;6889:5;6896:7;6905:3;6910:5;6917:6;6925:12;:21;6938:7;6925:21;;;;;;;;;;;;;;;:26;6947:3;6925:26;;;;;;;;;;;;;;;;6875:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6970:4;6963:11;;5963:1018;;;;;;;;;:::o;8916:115:1:-;8972:13;9004:4;9009:8;9004:14;;;;;;;;;;;;;;;;;;;;:20;;;8997:27;;8916:115;;;:::o;3026:69:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1885:23:4:-;;;;:::o;181::3:-;;;;;;;;;;;;;:::o;3228:66:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2773:308:4:-;2829:14;;:::i;:::-;2855:16;2938:10;2892:21;:30;2914:7;2892:30;;;;;;;;;;;;2881:41;;2951:1;2938:14;;2933:142;2959:8;;2954:2;:13;2933:142;;;3000:8;2989:4;2994:2;2989:8;;;;;;;;;;;;;;;;;:19;;;;;3033:21;:31;3055:8;3033:31;;;;;;;;;;;;3022:42;;2969:4;;;;;;;2933:142;;;2773:308;;;;;:::o;2863:69:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;742:137:3:-;487:5;;;;;;;;;;;473:19;;:10;:19;;;466:27;;;;;;836:5;;;;;;;;;;;823:18;;:9;:18;;;;815:27;;;;;;;;863:9;852:8;;:20;;;;;;;;;;;;;;;;;;742:137;:::o;5440:219:0:-;5515:7;5562:1;5542:22;;:8;:22;;;;5534:31;;;;;;;;5601:1;5583:20;;:6;:20;;;;5575:29;;;;;;;;5622:12;:20;5635:6;5622:20;;;;;;;;;;;;;;;:30;5643:8;5622:30;;;;;;;;;;;;;;;;5615:37;;5440:219;;;;:::o;6104:145:1:-;6179:4;6233:9;6202:40;;:17;:27;6220:8;6202:27;;;;;;;;;;;;;;;;;;;;;:40;;;6195:47;;6104:145;;;;:::o;6767:123::-;6874:9;6841:20;:30;6862:8;6841:30;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;6767:123;;:::o;6464:155::-;6546:4;6603:9;6569:43;;:20;:30;6590:8;6569:30;;;;;;;;;;;;;;;;;;;;;:43;;;6562:50;;6464:155;;;;:::o;4316:439::-;4400:19;:24;4420:3;4400:24;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;4466:3;4436:17;:27;4454:8;4436:27;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;4566:1;4549:19;;:5;:19;;;;4545:142;;;4584:19;:26;4604:5;4584:26;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;4646:20;:30;4667:8;4646:30;;;;;;;;;;;;4639:37;;;;;;;;;;;4545:142;4718:30;4727:5;4734:3;4739:8;4718:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4316:439;;;:::o;4993:277:2:-;5046:10;5068:25;;:::i;:::-;5128:13;5096:22;5111:6;5096:14;:22::i;:::-;5068:50;;5144:8;:15;5128:31;;5190:1;5173:5;:19;5169:67;;;5223:1;5208:17;;;;5169:67;5252:8;5261:1;5252:11;;;;;;;;;;;;;;;;;;5245:18;;4993:277;;;;;;:::o;3086:424:4:-;3147:12;3237:13;3364:10;3198:1;3179:7;:21;;:46;;;;;3214:4;:11;;;;3204:7;:21;3179:46;3171:55;;;;;;;;3253:13;:11;:13::i;:::-;3237:29;;3347:1;3340:8;;3377:1;3364:14;;3359:145;3386:5;3380:2;:11;;3359:145;;;3446:7;3417:21;:25;3439:2;3417:25;;;;;;;;;;;;:36;3413:81;;;3473:6;;;;;;;3413:81;3393:4;;;;;;;3359:145;;;3086:424;;;;;:::o;5909:318:2:-;6005:21;6011:5;6018:7;6005:5;:21::i;:::-;5997:30;;;;;;;;6063:1;6045:6;:20;;6037:29;;;;;;;;6107:6;6084:4;6089:7;6084:13;;;;;;;;;;;;;;;;;;;;:19;;;:29;;6076:38;;;;;;;;6168:6;6146:4;6151:7;6146:13;;;;;;;;;;;;;;;;;;;;:19;;;:28;6124:4;6129:7;6124:13;;;;;;;;;;;;;;;;;;;;:19;;:50;;;;6185:35;6197:5;6204:7;6213:6;6185:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5909:318;;;:::o;5461:248::-;5550:17;5556:3;5561:5;5550;:17::i;:::-;5542:26;;;;;;;;5604:1;5586:6;:20;;5578:29;;;;;;;;5657:6;5637:4;5642:5;5637:11;;;;;;;;;;;;;;;;;;;;:17;;;:26;5617:4;5622:5;5617:11;;;;;;;;;;;;;;;;;;;;:17;;:46;;;;5674:28;5683:3;5688:5;5695:6;5674:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5461:248;;;:::o;7036:738:1:-;7098:21;;:::i;:::-;7170:18;7344:23;;:::i;:::-;7409:18;7512:19;7555:10;7157:1;7139:20;;:6;:20;;;;7131:29;;;;;;;;7191:17;7201:6;7191:9;:17::i;:::-;7170:38;;7245:1;7231:10;:15;7227:541;;;7283:1;7269:16;;;;;;;;;;;;;;;;;;;;;;;;7262:23;;;;7227:541;7384:10;7370:25;;;;;;;;;;;;;;;;;;;;;;;;7344:51;;7430:13;:11;:13::i;:::-;7409:34;;7534:1;7512:23;;7568:1;7555:14;;7550:181;7577:10;7571:2;:16;;7550:181;;;7642:6;7617:31;;:17;:21;7635:2;7617:21;;;;;;;;;;;;;;;;;;;;;:31;;;7613:104;;;7696:2;7672:6;7679:13;;;;;;7672:21;;;;;;;;;;;;;;;;;:26;;;;;7613:104;7589:4;;;;;;;7550:181;;;7751:6;7744:13;;7036:738;;;;;;;;;:::o;4342:480:2:-;4463:21;4469:5;4476:7;4463:5;:21::i;:::-;4455:30;;;;;;;;4503:17;4509:3;4514:5;4503;:17::i;:::-;4495:26;;;;;;;;4557:1;4539:6;:20;;4531:29;;;;;;;;4589:5;4578:7;:16;;4570:25;;;;;;;;4636:6;4613:4;4618:7;4613:13;;;;;;;;;;;;;;;;;;;;:19;;;:29;;4605:38;;;;;;;;4698:6;4676:4;4681:7;4676:13;;;;;;;;;;;;;;;;;;;;:19;;;:28;4654:4;4659:7;4654:13;;;;;;;;;;;;;;;;;;;;:19;;:50;;;;4754:6;4734:4;4739:5;4734:11;;;;;;;;;;;;;;;;;;;;:17;;;:26;4714:4;4719:5;4714:11;;;;;;;;;;;;;;;;;;;;:17;;:46;;;;4771:44;4780:5;4787:7;4796:3;4801:5;4808:6;4771:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4342:480;;;;;:::o;1643:1907:5:-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o",
  "source": "// \n// MIT License\n// \n// Copyright (c) 2018 REGA Risk Sharing\n//   \n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n// \n// Author: Sergei Sevriugin\n// Version: 0.0.1\n//  \n\npragma solidity ^0.4.17;\n\nimport './TokenContainer.sol';\n/// TokenPool is TokenContainer with 4 level pool structure: \n/// Super Pool (Level 0), Pool (Level 1), Sub Pool (Level 2) and Token (Level 3)\n/// Level       Container / Member\n/// ------------------------------------------------\n///   0         SuperPool\n///   1              |______Pool\n///   2                      |______SubPool\n///   3                                |_______Token\ncontract TokenPool is TokenContainer {\n    /// @dev Pool defines pool structure\n    /// @param level Pool level: 0,1,2,3\n    /// @param maxNumber Maximum number of pools on this lavel\n    /// @param maxMember Maximum number of members for the pool\n    /// @param number Pool number for this level\n    /// @param last NFT ID for last availible pool (with member capacity)\n    struct Pool {\n        uint8   level;      // Pool level: 0,1,2,3\n        uint256 maxNumber;  // Maximum number of pools on this lavel\n        uint256 maxMember;  // Maximum number of members for the pool\n        uint256 number;     // Pool number for this level\n        uint256 last;       // NFT ID for last availible pool (with member capacity)\n        uint256 share;      // Pool share from token investment\n    }\n    /// @dev Pool structure \n    Pool[] pools;           // Pool structure\n    function TokenPool(string _name, string _symbol) TokenContainer(_name, _symbol) public { \n        maxLevel = 4;\n        // SuperPool configuration\n        Pool memory superPool = Pool({\n            level: uint8(0),\n            maxNumber: uint256(1),\n            maxMember: uint256(10),\n            number: uint256(0),\n            last: uint256(0),\n            share: uint256(10)\n        });\n        pools.push(superPool);\n        // Pool configuration \n        Pool memory pool = Pool({\n            level: uint8(1),\n            maxNumber: uint256(10),\n            maxMember: uint256(100),\n            number: uint256(0),\n            last: uint256(0),\n            share: uint256(20)\n        });\n        pools.push(pool);\n        // SubPool configuration \n        Pool memory subPool = Pool({\n            level: uint8(2),\n            maxNumber: uint256(1000),\n            maxMember: uint256(100),\n            number: uint256(0),\n            last: uint256(0),\n            share: uint256(50)\n        });\n        pools.push(subPool);\n    }\n}",
  "sourcePath": "/Users/sergei/ERC721SmartToken/contracts/TokenPool.sol",
  "ast": {
    "attributes": {
      "absolutePath": "/Users/sergei/ERC721SmartToken/contracts/TokenPool.sol",
      "exportedSymbols": {
        "TokenPool": [
          2296
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.4",
            ".17"
          ]
        },
        "id": 2173,
        "name": "PragmaDirective",
        "src": "1199:24:5"
      },
      {
        "attributes": {
          "SourceUnit": 2172,
          "absolutePath": "/Users/sergei/ERC721SmartToken/contracts/TokenContainer.sol",
          "file": "./TokenContainer.sol",
          "scope": 2297,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2174,
        "name": "ImportDirective",
        "src": "1225:30:5"
      },
      {
        "attributes": {
          "contractDependencies": [
            643,
            1300,
            1761,
            1841,
            2171,
            2402,
            2575,
            2592
          ],
          "contractKind": "contract",
          "documentation": "TokenPool is TokenContainer with 4 level pool structure: \n Super Pool (Level 0), Pool (Level 1), Sub Pool (Level 2) and Token (Level 3)\n Level       Container / Member\n ------------------------------------------------\n   0         SuperPool\n   1              |______Pool\n   2                      |______SubPool\n   3                                |_______Token",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            2296,
            2171,
            1761,
            1841,
            2592,
            643,
            2402,
            1300,
            2575
          ],
          "name": "TokenPool",
          "scope": 2297
        },
        "children": [
          {
            "attributes": {
              "arguments": [
                null
              ]
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "TokenContainer",
                  "referencedDeclaration": 2171,
                  "type": "contract TokenContainer"
                },
                "id": 2175,
                "name": "UserDefinedTypeName",
                "src": "1665:14:5"
              }
            ],
            "id": 2176,
            "name": "InheritanceSpecifier",
            "src": "1665:14:5"
          },
          {
            "attributes": {
              "canonicalName": "TokenPool.Pool",
              "name": "Pool",
              "scope": 2296,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "level",
                  "scope": 2189,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint8",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint8",
                      "type": "uint8"
                    },
                    "id": 2177,
                    "name": "ElementaryTypeName",
                    "src": "2040:5:5"
                  }
                ],
                "id": 2178,
                "name": "VariableDeclaration",
                "src": "2040:13:5"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "maxNumber",
                  "scope": 2189,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 2179,
                    "name": "ElementaryTypeName",
                    "src": "2091:7:5"
                  }
                ],
                "id": 2180,
                "name": "VariableDeclaration",
                "src": "2091:17:5"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "maxMember",
                  "scope": 2189,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 2181,
                    "name": "ElementaryTypeName",
                    "src": "2160:7:5"
                  }
                ],
                "id": 2182,
                "name": "VariableDeclaration",
                "src": "2160:17:5"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "number",
                  "scope": 2189,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 2183,
                    "name": "ElementaryTypeName",
                    "src": "2230:7:5"
                  }
                ],
                "id": 2184,
                "name": "VariableDeclaration",
                "src": "2230:14:5"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "last",
                  "scope": 2189,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 2185,
                    "name": "ElementaryTypeName",
                    "src": "2288:7:5"
                  }
                ],
                "id": 2186,
                "name": "VariableDeclaration",
                "src": "2288:12:5"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "share",
                  "scope": 2189,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 2187,
                    "name": "ElementaryTypeName",
                    "src": "2373:7:5"
                  }
                ],
                "id": 2188,
                "name": "VariableDeclaration",
                "src": "2373:13:5"
              }
            ],
            "id": 2189,
            "name": "StructDefinition",
            "src": "2018:416:5"
          },
          {
            "attributes": {
              "constant": false,
              "name": "pools",
              "scope": 2296,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct TokenPool.Pool storage ref[] storage ref",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct TokenPool.Pool storage ref[] storage pointer"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Pool",
                      "referencedDeclaration": 2189,
                      "type": "struct TokenPool.Pool storage pointer"
                    },
                    "id": 2190,
                    "name": "UserDefinedTypeName",
                    "src": "2468:4:5"
                  }
                ],
                "id": 2191,
                "name": "ArrayTypeName",
                "src": "2468:6:5"
              }
            ],
            "id": 2192,
            "name": "VariableDeclaration",
            "src": "2468:12:5"
          },
          {
            "attributes": {
              "constant": false,
              "implemented": true,
              "isConstructor": true,
              "name": "TokenPool",
              "payable": false,
              "scope": 2296,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_name",
                      "scope": 2295,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string memory",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string storage pointer"
                        },
                        "id": 2193,
                        "name": "ElementaryTypeName",
                        "src": "2533:6:5"
                      }
                    ],
                    "id": 2194,
                    "name": "VariableDeclaration",
                    "src": "2533:12:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_symbol",
                      "scope": 2295,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string memory",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string storage pointer"
                        },
                        "id": 2195,
                        "name": "ElementaryTypeName",
                        "src": "2547:6:5"
                      }
                    ],
                    "id": 2196,
                    "name": "VariableDeclaration",
                    "src": "2547:14:5"
                  }
                ],
                "id": 2197,
                "name": "ParameterList",
                "src": "2532:30:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2202,
                "name": "ParameterList",
                "src": "2601:0:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2171,
                      "type": "type(contract TokenContainer)",
                      "value": "TokenContainer"
                    },
                    "id": 2198,
                    "name": "Identifier",
                    "src": "2563:14:5"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2194,
                      "type": "string memory",
                      "value": "_name"
                    },
                    "id": 2199,
                    "name": "Identifier",
                    "src": "2578:5:5"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2196,
                      "type": "string memory",
                      "value": "_symbol"
                    },
                    "id": 2200,
                    "name": "Identifier",
                    "src": "2585:7:5"
                  }
                ],
                "id": 2201,
                "name": "ModifierInvocation",
                "src": "2563:30:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1862,
                              "type": "uint256",
                              "value": "maxLevel"
                            },
                            "id": 2203,
                            "name": "Identifier",
                            "src": "2612:8:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "34",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 4",
                              "value": "4"
                            },
                            "id": 2204,
                            "name": "Literal",
                            "src": "2623:1:5"
                          }
                        ],
                        "id": 2205,
                        "name": "Assignment",
                        "src": "2612:12:5"
                      }
                    ],
                    "id": 2206,
                    "name": "ExpressionStatement",
                    "src": "2612:12:5"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2208
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "superPool",
                          "scope": 2295,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct TokenPool.Pool memory",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Pool",
                              "referencedDeclaration": 2189,
                              "type": "struct TokenPool.Pool storage pointer"
                            },
                            "id": 2207,
                            "name": "UserDefinedTypeName",
                            "src": "2669:4:5"
                          }
                        ],
                        "id": 2208,
                        "name": "VariableDeclaration",
                        "src": "2669:21:5"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            "level",
                            "maxNumber",
                            "maxMember",
                            "number",
                            "last",
                            "share"
                          ],
                          "type": "struct TokenPool.Pool memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2189,
                              "type": "type(struct TokenPool.Pool storage pointer)",
                              "value": "Pool"
                            },
                            "id": 2209,
                            "name": "Identifier",
                            "src": "2693:4:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint8",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint8)",
                                  "value": "uint8"
                                },
                                "id": 2210,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2719:5:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 2211,
                                "name": "Literal",
                                "src": "2725:1:5"
                              }
                            ],
                            "id": 2212,
                            "name": "FunctionCall",
                            "src": "2719:8:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 2213,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2752:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 2214,
                                "name": "Literal",
                                "src": "2760:1:5"
                              }
                            ],
                            "id": 2215,
                            "name": "FunctionCall",
                            "src": "2752:10:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 2216,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2787:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "3130",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 10",
                                  "value": "10"
                                },
                                "id": 2217,
                                "name": "Literal",
                                "src": "2795:2:5"
                              }
                            ],
                            "id": 2218,
                            "name": "FunctionCall",
                            "src": "2787:11:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 2219,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2820:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 2220,
                                "name": "Literal",
                                "src": "2828:1:5"
                              }
                            ],
                            "id": 2221,
                            "name": "FunctionCall",
                            "src": "2820:10:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 2222,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2850:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 2223,
                                "name": "Literal",
                                "src": "2858:1:5"
                              }
                            ],
                            "id": 2224,
                            "name": "FunctionCall",
                            "src": "2850:10:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 2225,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2881:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "3130",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 10",
                                  "value": "10"
                                },
                                "id": 2226,
                                "name": "Literal",
                                "src": "2889:2:5"
                              }
                            ],
                            "id": 2227,
                            "name": "FunctionCall",
                            "src": "2881:11:5"
                          }
                        ],
                        "id": 2228,
                        "name": "FunctionCall",
                        "src": "2693:210:5"
                      }
                    ],
                    "id": 2229,
                    "name": "VariableDeclarationStatement",
                    "src": "2669:234:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Pool_$2189_memory_ptr",
                                  "typeString": "struct TokenPool.Pool memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct TokenPool.Pool storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2192,
                                  "type": "struct TokenPool.Pool storage ref[] storage ref",
                                  "value": "pools"
                                },
                                "id": 2230,
                                "name": "Identifier",
                                "src": "2913:5:5"
                              }
                            ],
                            "id": 2232,
                            "name": "MemberAccess",
                            "src": "2913:10:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2208,
                              "type": "struct TokenPool.Pool memory",
                              "value": "superPool"
                            },
                            "id": 2233,
                            "name": "Identifier",
                            "src": "2924:9:5"
                          }
                        ],
                        "id": 2234,
                        "name": "FunctionCall",
                        "src": "2913:21:5"
                      }
                    ],
                    "id": 2235,
                    "name": "ExpressionStatement",
                    "src": "2913:21:5"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2237
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "pool",
                          "scope": 2295,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct TokenPool.Pool memory",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Pool",
                              "referencedDeclaration": 2189,
                              "type": "struct TokenPool.Pool storage pointer"
                            },
                            "id": 2236,
                            "name": "UserDefinedTypeName",
                            "src": "2975:4:5"
                          }
                        ],
                        "id": 2237,
                        "name": "VariableDeclaration",
                        "src": "2975:16:5"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            "level",
                            "maxNumber",
                            "maxMember",
                            "number",
                            "last",
                            "share"
                          ],
                          "type": "struct TokenPool.Pool memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2189,
                              "type": "type(struct TokenPool.Pool storage pointer)",
                              "value": "Pool"
                            },
                            "id": 2238,
                            "name": "Identifier",
                            "src": "2994:4:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint8",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint8)",
                                  "value": "uint8"
                                },
                                "id": 2239,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3020:5:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 2240,
                                "name": "Literal",
                                "src": "3026:1:5"
                              }
                            ],
                            "id": 2241,
                            "name": "FunctionCall",
                            "src": "3020:8:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 2242,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3053:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "3130",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 10",
                                  "value": "10"
                                },
                                "id": 2243,
                                "name": "Literal",
                                "src": "3061:2:5"
                              }
                            ],
                            "id": 2244,
                            "name": "FunctionCall",
                            "src": "3053:11:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 2245,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3089:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "313030",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 100",
                                  "value": "100"
                                },
                                "id": 2246,
                                "name": "Literal",
                                "src": "3097:3:5"
                              }
                            ],
                            "id": 2247,
                            "name": "FunctionCall",
                            "src": "3089:12:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 2248,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3123:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 2249,
                                "name": "Literal",
                                "src": "3131:1:5"
                              }
                            ],
                            "id": 2250,
                            "name": "FunctionCall",
                            "src": "3123:10:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 2251,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3153:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 2252,
                                "name": "Literal",
                                "src": "3161:1:5"
                              }
                            ],
                            "id": 2253,
                            "name": "FunctionCall",
                            "src": "3153:10:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_20_by_1",
                                      "typeString": "int_const 20"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 2254,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3184:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "3230",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 20",
                                  "value": "20"
                                },
                                "id": 2255,
                                "name": "Literal",
                                "src": "3192:2:5"
                              }
                            ],
                            "id": 2256,
                            "name": "FunctionCall",
                            "src": "3184:11:5"
                          }
                        ],
                        "id": 2257,
                        "name": "FunctionCall",
                        "src": "2994:212:5"
                      }
                    ],
                    "id": 2258,
                    "name": "VariableDeclarationStatement",
                    "src": "2975:231:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Pool_$2189_memory_ptr",
                                  "typeString": "struct TokenPool.Pool memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct TokenPool.Pool storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2192,
                                  "type": "struct TokenPool.Pool storage ref[] storage ref",
                                  "value": "pools"
                                },
                                "id": 2259,
                                "name": "Identifier",
                                "src": "3216:5:5"
                              }
                            ],
                            "id": 2261,
                            "name": "MemberAccess",
                            "src": "3216:10:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2237,
                              "type": "struct TokenPool.Pool memory",
                              "value": "pool"
                            },
                            "id": 2262,
                            "name": "Identifier",
                            "src": "3227:4:5"
                          }
                        ],
                        "id": 2263,
                        "name": "FunctionCall",
                        "src": "3216:16:5"
                      }
                    ],
                    "id": 2264,
                    "name": "ExpressionStatement",
                    "src": "3216:16:5"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2266
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "subPool",
                          "scope": 2295,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct TokenPool.Pool memory",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Pool",
                              "referencedDeclaration": 2189,
                              "type": "struct TokenPool.Pool storage pointer"
                            },
                            "id": 2265,
                            "name": "UserDefinedTypeName",
                            "src": "3276:4:5"
                          }
                        ],
                        "id": 2266,
                        "name": "VariableDeclaration",
                        "src": "3276:19:5"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            "level",
                            "maxNumber",
                            "maxMember",
                            "number",
                            "last",
                            "share"
                          ],
                          "type": "struct TokenPool.Pool memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2189,
                              "type": "type(struct TokenPool.Pool storage pointer)",
                              "value": "Pool"
                            },
                            "id": 2267,
                            "name": "Identifier",
                            "src": "3298:4:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint8",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint8)",
                                  "value": "uint8"
                                },
                                "id": 2268,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3324:5:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 2",
                                  "value": "2"
                                },
                                "id": 2269,
                                "name": "Literal",
                                "src": "3330:1:5"
                              }
                            ],
                            "id": 2270,
                            "name": "FunctionCall",
                            "src": "3324:8:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 2271,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3357:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31303030",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1000",
                                  "value": "1000"
                                },
                                "id": 2272,
                                "name": "Literal",
                                "src": "3365:4:5"
                              }
                            ],
                            "id": 2273,
                            "name": "FunctionCall",
                            "src": "3357:13:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 2274,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3395:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "313030",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 100",
                                  "value": "100"
                                },
                                "id": 2275,
                                "name": "Literal",
                                "src": "3403:3:5"
                              }
                            ],
                            "id": 2276,
                            "name": "FunctionCall",
                            "src": "3395:12:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 2277,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3429:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 2278,
                                "name": "Literal",
                                "src": "3437:1:5"
                              }
                            ],
                            "id": 2279,
                            "name": "FunctionCall",
                            "src": "3429:10:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 2280,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3459:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 2281,
                                "name": "Literal",
                                "src": "3467:1:5"
                              }
                            ],
                            "id": 2282,
                            "name": "FunctionCall",
                            "src": "3459:10:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_50_by_1",
                                      "typeString": "int_const 50"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
                                "id": 2283,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3490:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "3530",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 50",
                                  "value": "50"
                                },
                                "id": 2284,
                                "name": "Literal",
                                "src": "3498:2:5"
                              }
                            ],
                            "id": 2285,
                            "name": "FunctionCall",
                            "src": "3490:11:5"
                          }
                        ],
                        "id": 2286,
                        "name": "FunctionCall",
                        "src": "3298:214:5"
                      }
                    ],
                    "id": 2287,
                    "name": "VariableDeclarationStatement",
                    "src": "3276:236:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Pool_$2189_memory_ptr",
                                  "typeString": "struct TokenPool.Pool memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct TokenPool.Pool storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2192,
                                  "type": "struct TokenPool.Pool storage ref[] storage ref",
                                  "value": "pools"
                                },
                                "id": 2288,
                                "name": "Identifier",
                                "src": "3522:5:5"
                              }
                            ],
                            "id": 2290,
                            "name": "MemberAccess",
                            "src": "3522:10:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2266,
                              "type": "struct TokenPool.Pool memory",
                              "value": "subPool"
                            },
                            "id": 2291,
                            "name": "Identifier",
                            "src": "3533:7:5"
                          }
                        ],
                        "id": 2292,
                        "name": "FunctionCall",
                        "src": "3522:19:5"
                      }
                    ],
                    "id": 2293,
                    "name": "ExpressionStatement",
                    "src": "3522:19:5"
                  }
                ],
                "id": 2294,
                "name": "Block",
                "src": "2601:947:5"
              }
            ],
            "id": 2295,
            "name": "FunctionDefinition",
            "src": "2514:1034:5"
          }
        ],
        "id": 2296,
        "name": "ContractDefinition",
        "src": "1643:1907:5"
      }
    ],
    "id": 2297,
    "name": "SourceUnit",
    "src": "1199:2351:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.18+commit.9cf6e910.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "1.0.1",
  "updatedAt": "2018-04-04T16:53:59.400Z"
}